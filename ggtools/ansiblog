#!/usr/bin/env bash

## ggtool ansiblog

function tint () {
  sed -E 's/(^COMMAND.*$)/'$'\e''[1;30;105m\1'$'\e''[0m/g;
          s/^[0-9-]*.*n=ansible \|/'$'\e''[0m/g;
          s/(ok: \[)/'$'\e''[32m\1/g;
          s/(skipping: \[)/'$'\e''[36m\1/g;
          s/(changed: \[)/'$'\e''[33m\1/g;
          s/(fatal: \[|\[ERROR\])/'$'\e''[1;91m\1/g;
          s/(<[0-9.]*[0-9]>)/'$'\e''[2;34m\1/g;
          s/(TASK.*\*\*\*\*$)/'$'\e''[1;35m\1/g;
          s/(PLAY.*\*\*\*\*$)/'$'\e''[1;95m\1/g;
          '
}

# function filter () { 
#   case "${1}" in
#     1 ) grep -Ev 'n=ansible \| included: ' | grep -Ev 'n=ansible \| Using module file' ;;
#     2 ) grep -Ev 'n=ansible \| <[0-9.]*[0-9]>' | grep -Ev 'n=ansible \| Pipelining is enabled.' | grep -Ev 'n=ansible \| Escalation succeeded' | filter 1 ;;
#     3) grep -E 'n=ansible \|' | filter 2 ;;
#   esac
# }

function usage () {
  echo -e "\nUsage: ansiblog [file]\n   File is an ansible log file (generally named ansible-[date]-[time].log)\n   If no file is supplied, ansiblog reads from stdin.\n"
}


case "${1}" in
  # -sss | summary3 ) filter 3 | tint ;;
  # -ss | summary2 ) filter 2 | tint ;;
  # -s | summary ) filter 1 | tint ;;
  -h | --help ) usage ;;
  * ) 
    if [[ -t 0 ]]; then
      if [[ -e $1 ]]; then
        cat $1 | tint
      else
        usage
      fi
    else
      tint
    fi
  ;;
esac
